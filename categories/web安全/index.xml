<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web安全 on Yang1k</title>
    <link>http://yang1k.github.io/categories/web%E5%AE%89%E5%85%A8/</link>
    <description>Recent content in Web安全 on Yang1k</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 Nov 2018 09:54:35 +0000</lastBuildDate>
    
	<atom:link href="http://yang1k.github.io/categories/web%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Phar反序列化</title>
      <link>http://yang1k.github.io/post/phar/</link>
      <pubDate>Mon, 12 Nov 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/phar/</guid>
      <description>&lt;h2 id=&#34;前记&#34;&gt;前记&lt;/h2&gt;

&lt;p&gt;大三了 课很多，在加上最近考驾照，感觉每天都过得浑浑噩噩的。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flask-SSTI</title>
      <link>http://yang1k.github.io/post/flask-sti/</link>
      <pubDate>Thu, 25 Oct 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/flask-sti/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;前记&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;之前对于模板漏洞一直没有复现学习，这次通过对flask的SSTI，来加深自己对于模板漏洞的认识。&lt;/p&gt;

&lt;!-- more --&gt;</description>
    </item>
    
    <item>
      <title>命令执行与代码执行</title>
      <link>http://yang1k.github.io/post/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Sat, 20 Oct 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
      <description>&lt;p&gt;总结了一下在ctf里经常遇到的命令执行个代码执行的利用点。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>between and 利用</title>
      <link>http://yang1k.github.io/post/between-and/</link>
      <pubDate>Tue, 04 Sep 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/between-and/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>phpwind复现</title>
      <link>http://yang1k.github.io/post/7phpwind-get%E5%9E%8Bcsrf%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Tue, 12 Jun 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/7phpwind-get%E5%9E%8Bcsrf%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>贷乐高注入复现</title>
      <link>http://yang1k.github.io/post/6%E8%B4%B7%E4%B9%90%E9%AB%98%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Mon, 11 Jun 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/6%E8%B4%B7%E4%B9%90%E9%AB%98%E6%B3%A8%E5%85%A5/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这篇文章主要介绍了一种绕过waf的思路技巧。在于拓展思维。由于没有找到源码，所以就记录一下这个思路技巧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;</description>
    </item>
    
    <item>
      <title>XXE学习</title>
      <link>http://yang1k.github.io/post/xee/</link>
      <pubDate>Fri, 08 Jun 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/xee/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>齐博sql注入复现</title>
      <link>http://yang1k.github.io/post/4%E9%BD%90%E5%8D%9Asql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Wed, 06 Jun 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/4%E9%BD%90%E5%8D%9Asql%E6%B3%A8%E5%85%A5/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>玄学-assert</title>
      <link>http://yang1k.github.io/post/%E7%8E%84%E5%AD%A6-assert/</link>
      <pubDate>Fri, 01 Jun 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/%E7%8E%84%E5%AD%A6-assert/</guid>
      <description>&lt;h2 id=&#34;前&#34;&gt;前&lt;/h2&gt;

&lt;p&gt;emmmmmm,本来只是一个一句话的函数，但是因为版本的问题，折腾了好久，所以记录一下&lt;/p&gt;

&lt;!-- more --&gt;</description>
    </item>
    
    <item>
      <title>变量覆盖导致的sql注入</title>
      <link>http://yang1k.github.io/post/3%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Wed, 30 May 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/3%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84sql%E6%B3%A8%E5%85%A5/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>redis未授权登录漏洞</title>
      <link>http://yang1k.github.io/post/2redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Sun, 20 May 2018 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/2redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/</guid>
      <description>&lt;p&gt;.
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>文件泄露小结</title>
      <link>http://yang1k.github.io/post/%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</link>
      <pubDate>Tue, 26 Dec 2017 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</guid>
      <description>&lt;p&gt;17年暑假在学校训练营的的时候老师讲过文件泄露，什么git文件啦，还做过示例，但是之后自己没有再去尝试，想想真的是有点过分。这次好好总结一波。&lt;/p&gt;

&lt;!-- more --&gt;</description>
    </item>
    
    <item>
      <title>SQL约束攻击</title>
      <link>http://yang1k.github.io/post/sql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/</link>
      <pubDate>Wed, 20 Dec 2017 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/sql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/</guid>
      <description>&lt;p&gt;感觉最终的效果和万能密码的差不多。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP格式化字符串的漏洞</title>
      <link>http://yang1k.github.io/post/php%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Thu, 23 Nov 2017 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/php%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%BC%8F%E6%B4%9E/</guid>
      <description>&lt;p&gt;这是WordPress爆出的一个SQL漏洞，漏洞发生在WP的后台上传图片的位置，通过修改图片在数据库中的参数，以及利用php的sprintf函数的特性，在删除图片时，导致&amp;rsquo;单引号的逃逸。漏洞利用较为困难。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>初识Padding Oracle Attack</title>
      <link>http://yang1k.github.io/post/cbc%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/</link>
      <pubDate>Wed, 22 Nov 2017 23:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/cbc%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/</guid>
      <description>&lt;p&gt;Lctf见到了这种攻击方式，学习学习。。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php弱类型</title>
      <link>http://yang1k.github.io/post/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</link>
      <pubDate>Wed, 08 Nov 2017 09:55:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</guid>
      <description>&lt;p&gt;php弱类型比较在ctf平台上很常见，这次总结了一下。但感觉还是不全，以后遇到再补吧。。&lt;/p&gt;

&lt;!-- more --&gt;</description>
    </item>
    
    <item>
      <title>php-哈希比较缺陷总结</title>
      <link>http://yang1k.github.io/post/php-md5%E6%AF%94%E8%BE%83%E7%BC%BA%E9%99%B7%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 08 Nov 2017 09:54:35 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/php-md5%E6%AF%94%E8%BE%83%E7%BC%BA%E9%99%B7%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;总结一下存在比较缺陷的两个php加密函数sha1()和md5()
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RPO（Relative Path Overwrite）</title>
      <link>http://yang1k.github.io/post/rpo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/rpo/</guid>
      <description>&lt;p&gt;越来越懒了，一篇总结断断续续写了好几天。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL注入绕过过滤总结</title>
      <link>http://yang1k.github.io/post/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;对sql注入的一些绕过技巧和绕过技巧的原理的总结。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sql注入之order by注入</title>
      <link>http://yang1k.github.io/post/sql%E6%B3%A8%E5%85%A5%E4%B9%8Border-by%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/sql%E6%B3%A8%E5%85%A5%E4%B9%8Border-by%E6%B3%A8%E5%85%A5/</guid>
      <description>&lt;p&gt;在安恒杯看到了利用order by进行盲注，记得自己之前好像总结过order by后的注入方法，翻笔记发现确实是有一篇标题为order by注入的笔记，然而里面什么都没写。看了下详细信息，发现是17年8月11号创建的。真的是拖延症拖到忘记啊。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>无回显的RCE</title>
      <link>http://yang1k.github.io/post/%E6%B2%A1%E6%9C%89%E5%9B%9E%E6%98%BE%E7%9A%84rce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://yang1k.github.io/post/%E6%B2%A1%E6%9C%89%E5%9B%9E%E6%98%BE%E7%9A%84rce/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;遇到一个题目，是一个命令执行，但是并没有回显，也就是说看不到命令执行的结果。在这种时候就需要利用dnslog来查看命令执行的结果。自己本身对于盲打rce就不太会，这次做一个总结。
这里介绍一个dnslog利用平台，&lt;a href=&#34;http://ceye.io&#34;&gt;ceye&lt;/a&gt;。
&lt;!-- more --&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>